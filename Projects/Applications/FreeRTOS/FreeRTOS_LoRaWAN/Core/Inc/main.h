/**
  ******************************************************************************
  * @file           : main.h
  * @brief          : Header for main.c file.
  *                   This file contains the common defines of the application.
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under Ultimate Liberty license
  * SLA0044, the "License"; You may not use this file except in compliance with
  * the License. You may obtain a copy of the License at:
  *                             www.st.com/SLA0044
  *
  ******************************************************************************
  */
#pragma once

#include <stdint.h>
#include "stm32wlxx_hal.h"

#define RTC_N_PREDIV_S 10
#define RTC_PREDIV_S ((1<<RTC_N_PREDIV_S)-1)
#define RTC_PREDIV_A ((1<<(15-RTC_N_PREDIV_S))-1)
#define LED1_Pin GPIO_PIN_15
#define LED1_GPIO_Port GPIOB
#define LED2_Pin GPIO_PIN_9
#define LED2_GPIO_Port GPIOB
#define PROB3_Pin GPIO_PIN_14
#define PROB3_GPIO_Port GPIOB
#define RF_CTRL3_Pin GPIO_PIN_3
#define RF_CTRL3_GPIO_Port GPIOC
#define BUT1_Pin GPIO_PIN_0
#define BUT1_GPIO_Port GPIOA
#define BUT1_EXTI_IRQn EXTI0_IRQn
#define PROB2_Pin GPIO_PIN_13
#define PROB2_GPIO_Port GPIOB
#define RF_CTRL2_Pin GPIO_PIN_5
#define RF_CTRL2_GPIO_Port GPIOC
#define PROB1_Pin GPIO_PIN_12
#define PROB1_GPIO_Port GPIOB
#define RF_CTRL1_Pin GPIO_PIN_4
#define RF_CTRL1_GPIO_Port GPIOC
#define BUT3_Pin GPIO_PIN_6
#define BUT3_GPIO_Port GPIOC
#define BUT2_Pin GPIO_PIN_1
#define BUT2_GPIO_Port GPIOA
#define BUT2_EXTI_IRQn EXTI1_IRQn
#define LED3_Pin GPIO_PIN_11
#define LED3_GPIO_Port GPIOB
#define USART1_RX_Pin GPIO_PIN_7
#define USART1_RX_GPIO_Port GPIOB
#define USART1_TX_Pin GPIO_PIN_6
#define USART1_TX_GPIO_Port GPIOB
#define USART2_RX_Pin GPIO_PIN_3
#define USART2_RX_GPIO_Port GPIOA
#define USART2_TX_Pin GPIO_PIN_2
#define USART2_TX_GPIO_Port GPIOA
#define PROB4_Pin GPIO_PIN_10
#define PROB4_GPIO_Port GPIOB

#define PB9_AF_TIM17_CH1 14		// AF nr. 14
#define CLOCK_SPEED 48000000	// 48 MHZ
#define TIM17_FREQUENCY 100		// 100 HZ (slow enough that led can handle the switching, while not visibly flickering)
#define TIM17_PERIOD UINT8_MAX	// Led brightness is set using a single byte
#define TIM17_PRESCALER ((CLOCK_SPEED / (TIM17_FREQUENCY * (TIM17_PERIOD + 1))) - 1)	// Prescaler value to get said frequency

/**
 * @brief System Clock Configuration
 */
void SystemClock_Config(void);

/**
 * @brief LPTIM1 Initialization Function
 */
void MX_LPTIM1_Init(void);

/**
 * @brief Initializes i2c2 gpio pins
 */
void I2C2_GPIO_Init(void);

/**
 * @brief I2C2 Initialization Function, generated by CubeMX and copied into this project
 */
void MX_I2C2_Init(void);

/**
 * @brief Initializes the red led on the dev board
 */
void Red_Led_GPIO_Init(void);

/**
 * @brief Initializes the motion sensor
 */
void Motion_Sensor_GPIO_Init(void);

/**
 * @brief Sets up the LoRaWAN process
 *
 * @param[in] argument Any arguments that might be passed to the task
 */
void Start_LoRaWAN_Task(void const *argument);

/**
 * @brief General task handles blinking red led and usart communication for eui's
 *
 * @param[in] argument	Any arguments that might be passed to the task
 */
void Start_General_Task(void const *argument);

/**
 * @brief Callback for when usart Rx is done, handles the received message
 *
 * @param[in] rx_char	The input data
 * @param[in] size		The length of the data
 * @param[in] error		Error code if an error occurred
 */
void Rx_Done(uint8_t *rx_char, uint16_t size, uint8_t error);

/**
 * @brief Callback for when usart Tx is done
 *
 * @param[in] arg	Any arguments that might have been passed
 */
void Tx_Done(void *arg);

/**
 * @brief Halts all processing and blinks red led fast to indicate error
 */
void Error_Handler(void);

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
